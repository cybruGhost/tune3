// Generated by view binder compiler. Do not edit!
package com.example.swipfy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.swipfy.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySwipeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout actionLayout;

  @NonNull
  public final FloatingActionButton fabAddToPlaylist;

  @NonNull
  public final FloatingActionButton fabDislike;

  @NonNull
  public final FloatingActionButton fabLike;

  @NonNull
  public final FloatingActionButton fabLyrics;

  @NonNull
  public final FloatingActionButton fabPlayPause;

  @NonNull
  public final ImageView ivAlbumArt;

  @NonNull
  public final MaterialCardView nowPlayingCard;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvArtistName;

  @NonNull
  public final TextView tvEmptyState;

  @NonNull
  public final TextView tvSongTitle;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivitySwipeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout actionLayout, @NonNull FloatingActionButton fabAddToPlaylist,
      @NonNull FloatingActionButton fabDislike, @NonNull FloatingActionButton fabLike,
      @NonNull FloatingActionButton fabLyrics, @NonNull FloatingActionButton fabPlayPause,
      @NonNull ImageView ivAlbumArt, @NonNull MaterialCardView nowPlayingCard,
      @NonNull ProgressBar progressBar, @NonNull SearchView searchView, @NonNull Toolbar toolbar,
      @NonNull TextView tvArtistName, @NonNull TextView tvEmptyState, @NonNull TextView tvSongTitle,
      @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.actionLayout = actionLayout;
    this.fabAddToPlaylist = fabAddToPlaylist;
    this.fabDislike = fabDislike;
    this.fabLike = fabLike;
    this.fabLyrics = fabLyrics;
    this.fabPlayPause = fabPlayPause;
    this.ivAlbumArt = ivAlbumArt;
    this.nowPlayingCard = nowPlayingCard;
    this.progressBar = progressBar;
    this.searchView = searchView;
    this.toolbar = toolbar;
    this.tvArtistName = tvArtistName;
    this.tvEmptyState = tvEmptyState;
    this.tvSongTitle = tvSongTitle;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySwipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySwipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_swipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySwipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionLayout;
      LinearLayout actionLayout = ViewBindings.findChildViewById(rootView, id);
      if (actionLayout == null) {
        break missingId;
      }

      id = R.id.fabAddToPlaylist;
      FloatingActionButton fabAddToPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (fabAddToPlaylist == null) {
        break missingId;
      }

      id = R.id.fabDislike;
      FloatingActionButton fabDislike = ViewBindings.findChildViewById(rootView, id);
      if (fabDislike == null) {
        break missingId;
      }

      id = R.id.fabLike;
      FloatingActionButton fabLike = ViewBindings.findChildViewById(rootView, id);
      if (fabLike == null) {
        break missingId;
      }

      id = R.id.fabLyrics;
      FloatingActionButton fabLyrics = ViewBindings.findChildViewById(rootView, id);
      if (fabLyrics == null) {
        break missingId;
      }

      id = R.id.fabPlayPause;
      FloatingActionButton fabPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (fabPlayPause == null) {
        break missingId;
      }

      id = R.id.ivAlbumArt;
      ImageView ivAlbumArt = ViewBindings.findChildViewById(rootView, id);
      if (ivAlbumArt == null) {
        break missingId;
      }

      id = R.id.nowPlayingCard;
      MaterialCardView nowPlayingCard = ViewBindings.findChildViewById(rootView, id);
      if (nowPlayingCard == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvArtistName;
      TextView tvArtistName = ViewBindings.findChildViewById(rootView, id);
      if (tvArtistName == null) {
        break missingId;
      }

      id = R.id.tvEmptyState;
      TextView tvEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyState == null) {
        break missingId;
      }

      id = R.id.tvSongTitle;
      TextView tvSongTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSongTitle == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivitySwipeBinding((CoordinatorLayout) rootView, actionLayout, fabAddToPlaylist,
          fabDislike, fabLike, fabLyrics, fabPlayPause, ivAlbumArt, nowPlayingCard, progressBar,
          searchView, toolbar, tvArtistName, tvEmptyState, tvSongTitle, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
